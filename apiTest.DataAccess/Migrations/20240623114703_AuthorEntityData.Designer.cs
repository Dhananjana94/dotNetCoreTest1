// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiTest.DataAccess;

#nullable disable

namespace apiTest.DataAccess.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20240623114703_AuthorEntityData")]
    partial class AuthorEntityData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apiTest.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wasantha perera"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wasthi anushka"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sumanapala herath"
                        });
                });

            modelBuilder.Entity("apitest.Models.TstMdl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("TstMdlTble");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 6, 23, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8605),
                            Description = "testing model 1",
                            Status = 0,
                            Title = "Test model 1 from sql",
                            UpdatedDate = new DateTime(2024, 6, 28, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8615)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2024, 6, 23, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8625),
                            Description = "testing model 2",
                            Status = 0,
                            Title = "Test model 2",
                            UpdatedDate = new DateTime(2024, 6, 28, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8625)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2024, 6, 23, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8627),
                            Description = "testing model 3",
                            Status = 0,
                            Title = "Test model 3",
                            UpdatedDate = new DateTime(2024, 6, 28, 17, 17, 2, 603, DateTimeKind.Local).AddTicks(8628)
                        });
                });

            modelBuilder.Entity("apitest.Models.TstMdl", b =>
                {
                    b.HasOne("apiTest.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
